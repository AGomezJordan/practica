{"version":3,"sources":["webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VFileInput/VFileInput.ts","webpack:///../../../src/components/VTextField/index.ts","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///../../../src/components/VTextarea/VTextarea.ts"],"names":["mixins","name","props","active","type","default","activeClass","this","chipGroup","close","closeIcon","disabled","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","value","data","proxyClass","computed","classes","groupClasses","hasClose","Boolean","isClickable","created","breakingProps","original","replacement","methods","click","genFilter","children","$createElement","VIcon","staticClass","left","genClose","right","size","on","e","genContent","$slots","render","tabindex","setBackgroundColor","color","h","setTextColor","VTextField","model","prop","event","chips","clearable","counterSizeString","counterString","placeholder","prependIcon","readonly","showSize","validator","v","includes","smallChips","truncateLength","Number","val","computedCounterValue","fileCount","isMultiple","lazyValue","$vuetify","lang","t","bytes","internalArrayValue","reduce","base","internalValue","get","set","isDirty","length","isLabelActive","$attrs","hasOwnProperty","text","map","file","truncatedText","hasChips","watch","handler","console","immediate","$refs","input","clearableCallback","genChips","small","genInput","genPrependSlot","icon","genIcon","genSlot","genSelectionText","genSelections","$scopedSlots","index","class","selection","genTextFieldSlot","node","onInput","files","onKeyDown","truncateText","str","charsKeepOneSide","Math","$","toAbsoluteIndex","toInteger","toLength","toObject","arraySpeciesCreate","createProperty","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","ACCESSORS","0","1","max","min","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","target","proto","forced","splice","start","deleteCount","insertCount","actualDeleteCount","A","k","from","to","O","len","actualStart","argumentsLength","arguments","TypeError","baseMixins","autoGrow","noResize","rowHeight","isNaN","parseFloat","rows","parseInt","noResizeHandle","$nextTick","mounted","setTimeout","calculateInputHeight","height","minHeight","isFocused"],"mappings":"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","file":"js/chunk-622c130e.c730796f.js","sourcesContent":["// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.isMultiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    isMultiple (): boolean {\n      return this.$attrs.hasOwnProperty('multiple')\n    },\n    text (): string[] {\n      if (!this.isDirty) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.isMultiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.isMultiple ? [] : undefined\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.isMultiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n"],"sourceRoot":""}